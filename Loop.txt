Loop Structer:

declare
   x number := 10;
begin
   loop
      dbms_output.put_line(x);
      x := x + 10;
      if x > 60 then
          exit;
      end if;
   end loop;
   dbms_output.put_line('After Exit x is: ' || x);
end;

Loop 2:

declare
   x number := 10;
begin
   loop
      dbms_output.put_line(x);
      x := x + 10;
      
          exit when x > 50;
      
   end loop;
   dbms_output.put_line('After Exit x is: ' || x);
end;

While Loop:
declare
   a number := 1;
begin
  while a < 11 loop
      dbms_output.put_line('Value of a is: ' || a);
      a := a + 1;      
   end loop;
end;

For Loop:
declare
   a number(2);
begin
  for a in 30..50 loop
    dbms_output.put_line('Value of a is: ' || a);
   
  end loop;
end;

Reserve For Loop:
declare
   a number(2);
begin
  for a in reverse 30..50 loop
    dbms_output.put_line('Value of a is: ' || a);
   
  end loop;
end;

Nested Loop Prime:
declare
   i number(3);
   j number(3);
begin
    i := 2;
    loop
    j := 2;
    loop
      exit when ((mod(i, j) = 0) or (j = i));
      j := j + 1;
    end loop;
    if (j = i) then
      dbms_output.put_line(i || ' is prime');
    end if;
    i := i + 1;
    exit when i = 100;
    end loop;
end;

Labeling Loop:
declare
   i number(1);
   j number(1);
begin
      for i in 1..3 loop
      for j in 1..3 loop
      dbms_output.put_line('i is: ' || i || ' and j is: ' || j);
  end loop;
  end loop;
end;

Exit When Loop:
declare
   a number(2) := 10;
   
begin
      while a < 20 loop
      dbms_output.put_line('Value of a is: ' || a);
      a := a + 1;
       exit when a > 16;
  end loop;
end;



